from aiogram import Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from states.register import RegisterForm

register_router = Router()


# Boshlang'ich - til tanlash
@register_router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    kb = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text="üá∫üáø O'zbekcha"), KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π")]
    ], resize_keyboard=True)

    await message.answer("Iltimos, tilni tanlang / –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=kb)
    await state.set_state(RegisterForm.language_selection)


@register_router.message(RegisterForm.language_selection)
async def process_language(message: Message, state: FSMContext):
    text = message.text.strip().lower()
    if text in ["üá∫üáø o'zbekcha", "ozbekcha", "uzbek"]:
        await state.update_data(language="uz")
        await message.answer("Ro'yxatdan o'tishni boshlaymiz. Iltimos, ismingizni kiriting:",
                             reply_markup=ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[]))
        await state.set_state(RegisterForm.waiting_for_name)
    elif text in ["üá∑üá∫ —Ä—É—Å—Å–∫–∏–π", "russkiy", "rus"]:
        await state.update_data(language="ru")
        await message.answer("–ù–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:",
                             reply_markup=ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[]))
        await state.set_state(RegisterForm.waiting_for_name)
    else:
        await message.answer(
            "Iltimos, ro'yxatdan o'tish uchun tilni tanlang / –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")


@register_router.message(RegisterForm.waiting_for_name)
async def process_name(message: Message, state: FSMContext):
    data = await state.get_data()
    lang = data.get("language", "uz")

    name = message.text.strip()
    if not name:
        if lang == "uz":
            await message.answer("Iltimos, to'g'ri ismingizni kiriting:")
        else:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è:")
        return

    await state.update_data(name=name)

    if lang == "uz":
        await message.answer("Telefon raqamingizni kiriting (masalan: +998901234567):")
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: +79891234567):")

    await state.set_state(RegisterForm.waiting_for_phone)


@register_router.message(RegisterForm.waiting_for_phone)
async def process_phone(message: Message, state: FSMContext):
    data = await state.get_data()
    lang = data.get("language", "uz")
    phone = message.text.strip()

    if not (phone.startswith("+") and phone[1:].isdigit()):
        if lang == "uz":
            await message.answer("Telefon raqamingiz noto'g'ri formatda. Iltimos, +998901234567 shaklida yuboring:")
        else:
            await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79891234567:")
        return

    await state.update_data(phone=phone)

    name = data.get("name")

    # Bu yerda ma'lumotlarni bazaga saqlash funksiyasini chaqirish mumkin
    # save_user(message.from_user.id, name, phone)

    if lang == "uz":
        await message.answer(f"Ro'yxatdan muvaffaqiyatli o'tdingiz!\nIsm: {name}\nTelefon: {phone}",
                             reply_markup=ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[]))
    else:
        await message.answer(f"–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!\n–ò–º—è: {name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone}",
                             reply_markup=ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[]))

    await state.clear()
